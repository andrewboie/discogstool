#!/usr/bin/env python
import argparse
import discogstool.libtags
import sys
import os
import filecmp
import shutil
import traceback

whitelist = frozenset([i for i in "1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ[]()-_+.' "])

def sanitize(fn):
    return "".join([i if (i in whitelist) else "_" for i in fn])

def process_file(path, args):
    af = libtags.AudioFile(path)
    ext = path[-3:]
    if af["genre"] == "null":
        print "Skipping genre unassigned", path
        return
    newdir = os.path.join(args.dest, sanitize(unicode(af["genre"])))
    try:
        bpm = int(unicode(af["bpm"]))
    except ValueError:
        bpm = 0
    newfn = sanitize("[%03d] %s - %s (%s).%s" % 
            (bpm, af["artist"], af["title"], af["year"], ext))
    newpath = os.path.abspath(os.path.join(newdir, newfn))
    if not os.path.exists(newpath) or not filecmp.cmp(path, newpath):
        if args.verbose:
            print "MOVE" if args.move else "COPY", path, "\n\t-->", newpath
        if not args.dryrun:
            if not os.path.exists(newdir):
                os.makedirs(newdir)
            if args.move:
                shutil.move(path, newpath)
            else:
                shutil.copy2(path, newpath)
    else:
        if args.verbose:
            print "Skipping unchanged file", newpath
    return newpath

parser = argparse.ArgumentParser(description='Copy music files, renaming them')
parser.add_argument("-s", "--src", default="/Users/andrew/Music/iTunes/iTunes Media/Music/",
        help="source directory")
parser.add_argument("-d", "--dest", required=True,
        help="destination directory")
parser.add_argument("-y", "--dryrun", action="store_true",
        help="Don't actually do anything")
parser.add_argument("-m", "--move", action="store_true",
        help="Move items instead of copying them")
parser.add_argument("-p", "--prune", action="store_true",
        help="Delete files under dest which aren't part of the set")
parser.add_argument("-v", "--verbose", action="store_true")

args = parser.parse_args(sys.argv[1:])

filelist = []
for root, dirs, files in os.walk(args.src):
    for fname in files:
        if fname.startswith("."):
            continue
        if fname[-3:].upper() in ["MP3", "M4A", "AAC", "MP4"]:
            filename = os.path.abspath(os.path.join(root, fname))
            try:
                filelist.append(process_file(filename, args))
            except Exception, e:
                print "Failed to process", filename
                traceback.print_exc()
        elif args.verbose:
            print "Skipping unsupported file", fname

filelist = frozenset(filelist)
if args.prune:
    for root, dirs, files in os.walk(args.dest, topdown=False):
        for fname in files:
            filename = os.path.abspath(os.path.join(root, fname))
            if filename not in filelist:
                if args.verbose:
                    print "Deleting", filename
                if not args.dryrun:
                    try:
                        os.remove(filename)
                    except Exception, e:
                        print "Couldn't delete", filename
        if not os.listdir(root):
            if args.verbose:
                print "rmdir", root
            os.rmdir(root)



